class Solution{
    public:
    
 vector<string>ans;
 vector<string>temp;
  void solve(vector<vector<int>>&m,vector<vector<bool>>&vis,int n,int i,int j,string &str){
 
 
 
   if(i>=n || j>=n || i<0 || j<0 ||vis[i][j]==true || m[i][j]==0)return;
   if(i==n-1 && j==n-1){
       ans.push_back(str);
       return;
       
   }
   vis[i][j]=true;
   
  
   
 //right  
//if(m[i][j+1]==1){
   str.push_back('R');
   solve(m,vis,n,i,j+1,str);
   str.pop_back();
//}

//left
 //if(m[i][j-1]==1){ 
     str.push_back('L');
    solve(m,vis,n,i,j-1,str);
    str.pop_back();
//} 

//up
//if(m[i-1][j]==1){   
    str.push_back('U');
    solve(m,vis,n,i-1,j,str);
    str.pop_back();
//} 

//down
//if(m[i+1][j]==1){   
    str.push_back('D');
    solve(m,vis,n,i+1,j,str);
    str.pop_back();
    
//}

vis[i][j]=false;

      
  } 
    
    
    
    
    vector<string> findPath(vector<vector<int>> &m, int n) {
       string str="";
       vector<vector<bool>>vis(n,vector<bool>(n,false));
       solve(m,vis,n,0,0,str);
       
      return ans;
       
    }
};


